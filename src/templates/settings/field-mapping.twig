{% extends "enupal-socializer/_layouts/settings" %}
{% import "_includes/forms" as forms %}

{% set settings = settings is defined ? settings : craft.socializer.getSettings() %}
{% set fullPageForm = true %}
{% set saveShortcutRedirect = 'enupal-socializer/settings/field-mapping' %}

{% set savePaymentForm %}
    <div class="buttons">
        <input class="btn submit" type="submit" value="{{ 'Save'|t }}">
    </div>
{% endset %}

{% set content %}
    <input type="hidden" name="action"
           value="enupal-socializer/settings/save-settings">

    <div id="settings-cp">

        {% namespace 'settings' %}
            {{ forms.field({
                label: "User Field Mapping"|t('enupal-socializer')|upper,
                instructions: "Socializer will populate email, firstName and lastName into the User model by default"
            }, null) }}
            <hr>

            {{ forms.lightswitchField({
                label: 'Enable Field Mapping'|t('enupal-socializer'),
                instructions: 'General Field Mapping for when a user Sign Up (This will apply to all the providers)',
                id: 'enableFieldMapping',
                name: 'enableFieldMapping',
                on: settings.enableFieldMapping,
                onLabel: "On"|t('enupal-socializer'),
                offLabel: "Off"|t('enupal-socializer'),
                toggle: "field-mapping",
                errors: settings.getErrors('enableFieldMapping')
            }) }}
            <hr>

            <div id="field-mapping"  class="{% if not settings.enableFieldMapping %} hidden {% endif %}">
                {{ forms.lightswitchField({
                    label: 'Enable Field Mapping per Proviver'|t('enupal-socializer'),
                    instructions: 'Allow editing the User Field Mapping as per provider basis',
                    id: 'enableFieldMappingPerProvider',
                    name: 'enableFieldMappingPerProvider',
                    on: settings.enableFieldMappingPerProvider,
                    onLabel: "On"|t('enupal-socializer'),
                    offLabel: "Off"|t('enupal-socializer'),
                    errors: settings.getErrors('enableFieldMappingPerProvider')
                }) }}

                {% set fieldMapping = craft.socializer.app.settings.getGlobalFieldMapping() %}
                {% set userProfileFields = craft.socializer.app.providers.getUserProfileFieldsAsOptions() %}
                {% set supportedUserFields = craft.socializer.app.providers.getUserFieldsAsOptions() %}

                {{ forms.editableTableField({
                    label: "User Field Mapping"|t('enupal-socializer'),
                    instructions: "Populate the User model with fields values from your Provider",
                    info: "Populate values to the user model",
                    id: 'fieldMapping',
                    name: 'fieldMapping',
                    staticRows: true,
                    minRows: fieldMapping|length,
                    maxRows: fieldMapping|length,
                    cols: {
                        sourceFormField: {
                            type: 'select',
                            class: 'sourceField',
                            options: userProfileFields,
                            heading: "Provider Field"|t('enupal-socializer')
                        },
                        targetUserField: {
                            type: 'select',
                            options: supportedUserFields,
                            heading: "User Field"|t('enupal-socializer')
                        }
                    },
                    rows: fieldMapping,
                    errors: []|unique
                }) }}
            </div>
        {% endnamespace %}
    </div>

{% endset %}

{% do view.registerAssetBundle("enupal\\socializer\\web\\assets\\fieldmapping\\FieldMappingAsset") %}

{% js %}
    $(document).ready(function() {
    var userProfileFields = {{ userProfileFields|json_encode()|raw }};
    new SocializerFieldMapping(userProfileFields);
    });
{% endjs %}

